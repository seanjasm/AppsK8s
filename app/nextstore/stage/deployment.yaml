apiVersion: v1
kind: Namespace
metadata:
  name: stage
  labels:
    name: staging

---

apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limitlrange
  namespace: stage
spec:
  limits:
    - default:
       memory: 128Mi #512Mi
      defaultRequest:
        memory: 128Mi #256Mi
      type: Container
    

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextstore-app-oa-inline
  namespace: stage
  labels:
    app: nextstore-inline
    tier: staging
spec:
  selector:
    matchLabels:
      app: nextstore-inline
      dep: DOD   
  replicas: 1
  template:
    metadata:
      name: nextstore-app
      annotations: 
        nextstore.com/owner: "Sean Mattis"
        nextstore.com/email: "sean.mattis@dynatrace.com"
        nextstore.com/department: "DOD"
      labels:
        app: nextstore-inline
        dep: DOD   
    spec:    
      containers:
        - name: nextstore-container
          image: seanmattisdocker/nextstore:oa-inline-v1
          ports:
            - containerPort: 80
          env:
          - name: "ASPNETCORE_ENVIRONMENT"
            value: Staging
          - name: "DT_CUSTOM_PROP"
            value: 'app=nextstore type=inline onwer=Sean_Mattis cluster=VBCLuster'
          - name: "DT_TAGS"
            value: "dt_k8s_local"  
          - name: "APP_COLOR"
            value: "royalblue" 
          - name: "RGB"
            value: "false" #default is false
          volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true 

      volumes:
      - name: secrets
        secret:
          secretName: secret-appsettings
          

---

apiVersion: v1
kind: Service
metadata:
  name: nextstore-service-inline
  namespace: stage
  labels:
          app: nextstore-inline
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
  selector:
      app: nextstore-inline 
      dep: DOD  

---

apiVersion: v1
kind: Pod
metadata:
  name: annotations-demo
  namespace: stage
  labels:
    app: nginx
    dep: DOD
  annotations:
    imageregistry: "https://hub.docker.com/"
spec:
  containers:
  - name: nginx
    image: nginx:alpine
    ports:
    - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: stage
spec:
  selector:
    app: nginx
    dep: DOD
  type: NodePort
  ports:
    - targetPort: 80
      port: 80
      nodePort: 30100
